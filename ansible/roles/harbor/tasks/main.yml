- name: 生成 harbor 随机密码
  shell: < /dev/urandom tr -dc 0-9A-Za-z-_ | head -c 16
  register: harbor_password_gen

- name: 创建 harbor data 目录
  file:
    path: /data
    state: directory
    mode: 0755

# 注册变量 result，如果 /data 目录下存在 registry 目录说明已经安装过 harbor，则不进行安装
- name: 注册变量 result
  command: ls /data
  register: result

- block:
  - name: 下发 docker compose 二进制文件
    copy: src={{ base_dir }}/bin_amd64/docker-compose dest=/usr/local/bin/docker-compose mode=0755

  - name: 下发 harbor 离线安装包
    copy:
      src: "{{ base_dir }}/packages/harbor-offline-installer-{{ HARBOR_VER }}.tgz"
      dest: "/data/harbor-offline-installer-{{ HARBOR_VER }}.tgz"

  - name: 解压 harbor 离线安装包
    shell: "cd /data && tar zxf harbor-offline-installer-{{ HARBOR_VER }}.tgz"

  - name: 导入 harbor 所需 docker images
    shell: "docker load -i /data/harbor/harbor.{{ HARBOR_VER }}.tar.gz"

  - name: 配置 harbor.yml 文件
    template: src=harbor.yml.j2 dest=/data/harbor/harbor.yml

  - name: 生成 harbor 服务端证书
    shell: "cd {{ base_dir }}/manifests/kube-init/pki && \
            openssl req -newkey rsa:4096 -nodes -sha256 -keyout harbor.bochtec.com.key -out harbor.bochtec.com.csr -subj "/C=CN/L=Beijing/O=harbor/CN=harbor.bochtec.com" && \
            openssl x509 -req -days 3650 -in harbor.bochtec.com.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out harbor.bochtec.com.crt
    connection: local

  - name: 创建 harbor 证书目录
    file: name={{ item }} state=directory
    with_items:
    - "/data/cert"

  - name: 拷贝 harbor 服务端证书
    copy: src={{ base_dir }}/manifests/kube-init/pki/{{ item }} dest=/data/cert/{{ item }}
    with_items:
    - "harbor.bochtec.com.crt"
    - "harbor.bochtec.com.key"

  - name: 安装 harbor --with-clair
    shell: "cd /data/harbor && \
            ./install.sh"
  when: '"registry" not in result.stdout'
